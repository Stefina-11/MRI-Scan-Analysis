import { TumorAnalysisResult } from '../models/tumor-analyzer';
import path = require('path');
import fs = require('fs');
import pdf = require('html-pdf');

export class ReportGenerator {
  public async generatePdfReport(analysisResult: TumorAnalysisResult, imagePath: string): Promise<string> {
    const {
      tumorDetected,
      tumorType,
      tumorGrade,
      tumorSize,
      tumorLocation,
      medicalSummary,
      surgicalApproach,
      explainableAIData,
      confidenceScores,
      anomalyDetected,
      growthTrackingData,
      threeDReconstructionData,
      multiModalDataProcessed,
      treatmentSuggestions,
      patientId,
      reportId,
      auditLogEntry,
    } = analysisResult;

    const tumorStatus = tumorDetected ? 'Detected' : 'Not Detected';
    const tumorDetails = tumorDetected ? `
      <p><strong>Tumor Type:</strong> ${tumorType || 'N/A'}</p>
      <p><strong>Tumor Grade:</strong> ${tumorGrade || 'N/A'}</p>
      <p><strong>Tumor Size:</strong> ${tumorSize || 'N/A'}</p>
      <p><strong>Tumor Location:</strong> ${tumorLocation || 'N/A'}</p>
      <p><strong>Surgical Approach Suggestion:</strong> ${surgicalApproach || 'N/A'}</p>
    ` : '';

    const confidenceScoresHtml = confidenceScores ? `
      <h3>AI Confidence Scores</h3>
      <p><strong>Detection Confidence:</strong> ${confidenceScores.detection ? (confidenceScores.detection * 100).toFixed(2) : 'N/A'}%</p>
      ${confidenceScores.classification ? `<p><strong>Classification Confidence:</strong> ${Object.entries(confidenceScores.classification).map(([type, score]) => `${type}: ${(score * 100).toFixed(2)}%`).join(', ')}</p>` : ''}
      ${confidenceScores.grading ? `<p><strong>Grading Confidence:</strong> ${Object.entries(confidenceScores.grading).map(([grade, score]) => `${grade}: ${(score * 100).toFixed(2)}%`).join(', ')}</p>` : ''}
    ` : '';

    const anomalyDetectionHtml = anomalyDetected ? `
      <h3>Anomaly Detection</h3>
      <p style="color: red;"><strong>Anomaly Detected:</strong> Yes - This scan may contain unusual or rare tumor characteristics.</p>
    ` : '';

    const growthTrackingHtml = growthTrackingData?.previousScanDate ? `
      <h3>Tumor Growth Tracking</h3>
      <p><strong>Previous Scan Date:</strong> ${growthTrackingData.previousScanDate}</p>
      <p><strong>Previous Tumor Size:</strong> ${growthTrackingData.previousTumorSize}</p>
      <p><strong>Growth Rate:</strong> ${growthTrackingData.growthRate}</p>
    ` : '';

    const threeDReconstructionHtml = threeDReconstructionData?.modelUrl ? `
      <h3>3D Reconstruction</h3>
      <p>A 3D model of the tumor is available for visualization. (Model URL: ${threeDReconstructionData.modelUrl})</p>
    ` : '';

    const multiModalHtml = multiModalDataProcessed ? `
      <h3>Multi-modal MRI Support</h3>
      <p>This analysis incorporated multiple MRI modalities for enhanced accuracy.</p>
    ` : '';

    const treatmentSuggestionsHtml = treatmentSuggestions?.length ? `
      <h3>Treatment Planning Support</h3>
      <ul>
        ${treatmentSuggestions.map(suggestion => `<li>${suggestion}</li>`).join('')}
      </ul>
    ` : '';

    const explainabilityHtml = explainableAIData?.stepByStepReasoning ? `
      <h3>Explainability & Transparency</h3>
      <p><strong>AI Reasoning:</strong> ${explainableAIData.stepByStepReasoning}</p>
      ${explainableAIData?.overlayImage ? `
        <h4>Tumor Segmentation Overlay (Grad-CAM Heatmap)</h4>
        <img src="${explainableAIData.overlayImage}" alt="Tumor Overlay" style="max-width: 100%; height: auto;">
        <p>This image highlights areas influencing AI decisions.</p>
      ` : ''}
    ` : '';

    const auditTrailHtml = auditLogEntry ? `
      <h3>Audit Trail</h3>
      <p>${auditLogEntry}</p>
    ` : '';

    const educationalInfoHtml = `
      <div class="section">
        <h2>Educational Information</h2>
        <p><strong>Understanding Brain Tumors:</strong> Brain tumors are abnormal growths of cells in the brain. They can be benign (non-cancerous) or malignant (cancerous). Symptoms vary depending on the tumor's size, type, and location.</p>
        <p><strong>Common Symptoms:</strong> Headaches, seizures, nausea, vomiting, vision problems, and changes in personality or behavior.</p>
        <p><strong>Treatment Options:</strong> May include surgery, radiation therapy, chemotherapy, targeted drug therapy, or a combination of these, depending on the tumor type, grade, and patient's overall health.</p>
        <p>For more detailed information, please consult with a medical professional.</p>
      </div>
    `;

    const disclaimer = `
      <p style="font-size: 0.8em; color: #888; margin-top: 20px;">
        <strong>Disclaimer:</strong> The information provided in this report is generated by an AI system and is for informational purposes only.
        It is not intended to be a substitute for professional medical advice, diagnosis, or treatment.
        Final medical decisions must always be made by qualified medical professionals.
      </p>
    `;

    const htmlContent = `
      <!DOCTYPE html>
      <html lang="en">
      <head>
          <meta charset="UTF-8">
          <title>Brain Tumor Analysis Report</title>
          <style>
              body { font-family: Arial, sans-serif; margin: 40px; line-height: 1.6; color: #333; }
              h1 { color: #0056b3; text-align: center; margin-bottom: 30px; }
              h2 { color: #0056b3; border-bottom: 1px solid #eee; padding-bottom: 10px; margin-top: 30px; }
              h3 { color: #0056b3; margin-top: 20px; }
              p { margin-bottom: 10px; }
              ul { list-style-type: disc; margin-left: 20px; }
              .section { margin-bottom: 20px; }
              .image-container { text-align: center; margin-top: 20px; }
              img { max-width: 100%; height: auto; border: 1px solid #ccc; }
          </style>
      </head>
      <body>
          <h1>Brain Tumor Analysis Report</h1>

          <div class="section">
              <h2>Patient Information</h2>
              <p><strong>Patient ID:</strong> ${patientId || '[N/A]'}</p>
              <p><strong>Report ID:</strong> ${reportId || '[N/A]'}</p>
              <p><strong>Date of Analysis:</strong> ${new Date().toLocaleDateString()}</p>
          </div>

          <div class="section">
              <h2>MRI Scan Details</h2>
              <div class="image-container">
                  <img src="${imagePath}" alt="Uploaded MRI Scan">
                  <p>Original MRI Scan</p>
              </div>
          </div>

          <div class="section">
              <h2>Tumor Analysis Summary</h2>
              <p><strong>Tumor Status:</strong> ${tumorStatus}</p>
              ${tumorDetails}
              <p><strong>Medical Summary:</strong> ${medicalSummary || 'N/A'}</p>
          </div>

          ${confidenceScoresHtml}
          ${anomalyDetectionHtml}
          ${growthTrackingHtml}
          ${threeDReconstructionHtml}
          ${multiModalHtml}
          ${treatmentSuggestionsHtml}
          ${explainabilityHtml}
          ${auditTrailHtml}
          ${educationalInfoHtml}

          ${disclaimer}
      </body>
      </html>
    `;

    const reportFileName = `report-${Date.now()}.pdf`;
    const reportFilePath = path.join(__dirname, '..', 'uploads', reportFileName); // Store reports in uploads

    return new Promise((resolve, reject) => {
      pdf.create(htmlContent, { format: 'A4' }).toFile(reportFilePath, (err: Error, res: any) => {
        if (err) {
          return reject(err);
        }
        resolve(`/uploads/${reportFileName}`); // Return public path to the report
      });
    });
  }
}
